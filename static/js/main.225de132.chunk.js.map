{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","username","email","className","alt","src","CardList","robotsCL","cardsArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","robots","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAgC,EAA/BC,GAAgC,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAClC,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,mBACpB,gCACC,6BAAKD,IACL,4BAAIE,WCmBOI,EAxBC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAMjB,IAAMC,EAAYD,EAASE,KAAI,SAACC,EAAKC,GACpC,OACC,cAAC,EAAD,CAEAZ,GAAIQ,EAASI,GAAGZ,GAChBC,KAAMO,EAASI,GAAGX,KAClBC,SAAUM,EAASI,GAAGV,SACtBC,MAAOK,EAASI,GAAGT,OAJdK,EAASI,GAAGZ,OAQnB,OACC,8BACES,KCXWI,EAXG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,uBACAV,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,KCEGI,EARD,SAACC,GACd,OACC,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACEJ,EAAMK,YCoBKC,E,kDApBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAS,GAHQ,E,qDAQnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAIG,KAAKJ,MAAMC,SACP,wDAEDG,KAAKX,MAAMK,a,GAjBOQ,aC+CZC,G,wDAxCd,aAAe,IAAD,8BACb,gBAcDC,eAAe,SAACC,GACf,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAdxC,EAAKZ,MAAO,CACXa,OAAQ,GACRH,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,EAAKb,SAAS,CAAEQ,OAAQK,S,oBAQ1C,WAAS,IAAD,EACuBd,KAAKJ,MAA5Ba,EADA,EACAA,OAAQH,EADR,EACQA,YACTS,EAAgBN,EAAOO,QAAO,SAAAC,GACnC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASb,EAAYY,kBAEtD,OAAQT,EAAOW,OAGb,sBAAK9C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,SAAUqC,WAPxB,wD,GA1Beb,cCIHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.225de132.chunk.js","sourcesContent":["// import React from 'react';\r\n\r\nconst Card = ({id, name, username, email}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robot' src={`https://robohash.org/${username}?size=200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","// import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({robotsCL}) => {\r\n\tif (false) {\r\n\t\tthrow new Error('Noooooooo');\r\n\t}\r\n\r\n\r\n\tconst cardsArray= robotsCL.map((user,i) => {\r\n\t\treturn (\r\n\t\t\t<Card\r\n\t\t\tkey={robotsCL[i].id} //needs an unique key for updating only what changes\r\n\t\t\tid={robotsCL[i].id}\r\n\t\t\tname={robotsCL[i].name}\r\n\t\t\tusername={robotsCL[i].username}\r\n\t\t\temail={robotsCL[i].email}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{cardsArray}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","const SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\t\t<input\r\n\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\ttype=\"search\"\r\n\t\tplaceholder='search robots'\r\n\t\tonChange={searchChange}\r\n\t\t/>\r\n\t\t)\r\n} \r\n\r\nexport default SearchBox;","const Scroll =(props) => {\r\n\treturn (\r\n\t\t<div style={{overflow: 'scroll', border: '2px solid black', height: '600px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError:false\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({hasError: true});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1>ooops this is an error</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\n// import {robots as rbts} from './robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state= {\r\n\t\t\trobots: [],\r\n\t\t\tsearchField: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => { this.setState({ robots: users})});\r\n\t\t\r\n\t}\r\n\r\n\tonSearchChange=(event) => {\r\n\t\tthis.setState({searchField:event.target.value})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {robots, searchField} = this.state;\r\n\t\tconst filteredRobots= robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t\t});\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading the robots</h1> :\r\n\t\t\t(\r\n\t\t\t\t<div className=\"tc\">\r\n\t\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<CardList robotsCL={filteredRobots} />\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import {robots} from './robots'; LE NOM DE LA VARIABLE DOIT ETRE UTILISE TEL QUE DEFINI DANS LE FICHIER JSX OU RENOMME AVEC  //AS//\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}